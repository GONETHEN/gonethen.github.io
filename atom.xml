<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>THE</title>
  <subtitle>GONETHEN</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://gonethen.github.io/"/>
  <updated>2017-04-20T11:59:35.869Z</updated>
  <id>http://gonethen.github.io/</id>
  
  <author>
    <name>GONETHEN</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>学习JavaFX之路(1) - HELLO JavaFX</title>
    <link href="http://gonethen.github.io/2018/03/31/%E5%AD%A6%E4%B9%A0JavaFX%E4%B9%8B%E8%B7%AF(1)%20-%20HELLO%20JavaFX/"/>
    <id>http://gonethen.github.io/2018/03/31/学习JavaFX之路(1) - HELLO JavaFX/</id>
    <published>2018-03-31T06:23:54.648Z</published>
    <updated>2017-04-20T11:59:35.869Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Hello JavaFX.</strong></p>
<a id="more"></a>
<h2 id="HELLO-JavaFX"><a href="#HELLO-JavaFX" class="headerlink" title="HELLO JavaFX"></a>HELLO JavaFX</h2><h3 id="什么是JavaFX"><a href="#什么是JavaFX" class="headerlink" title="什么是JavaFX"></a>什么是JavaFX</h3><p>JavaFX是一个强大的图形和多媒体处理工具包集合，它允许开发者来设计、创建、测试、调试和部署富客户端程序，早已加入Java8豪华午餐。</p>
<p>谁说Java不能开发桌面应用程序？</p>
<h3 id="JavaFX基本结构"><a href="#JavaFX基本结构" class="headerlink" title="JavaFX基本结构"></a>JavaFX基本结构</h3><ul>
<li>JavaFX运行主类继承自<code>javafx.application.Application</code>类，start()方法是所有JavaFX应用程序的入口。</li>
<li>JavaFX应用程序将UI容器定义为舞台(Stage)与场景(Scene)。Stage类是JavaFX顶级容器。Scene类是所有内容的容器。</li>
</ul>
<h3 id="Hello-JavaFX"><a href="#Hello-JavaFX" class="headerlink" title="Hello JavaFX"></a>Hello JavaFX</h3><p>直接上代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(Stage primaryStage)</span> <span class="keyword">throws</span> Exception</span>&#123;</div><div class="line">        Button btn = <span class="keyword">new</span> Button();</div><div class="line">        btn.setText(<span class="string">"说你好"</span>);</div><div class="line">        btn.setOnAction(<span class="keyword">new</span> EventHandler&lt;ActionEvent&gt;() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(ActionEvent event)</span> </span>&#123;</div><div class="line">                System.out.println(<span class="string">"你好"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        StackPane root = <span class="keyword">new</span> StackPane();</div><div class="line">        root.getChildren().add(btn);</div><div class="line">        Scene scene = <span class="keyword">new</span> Scene(root,<span class="number">300</span>,<span class="number">250</span>);</div><div class="line">        primaryStage.setScene(scene);</div><div class="line">        primaryStage.setTitle(<span class="string">"你好"</span>);</div><div class="line">        primaryStage.show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        launch(args);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>在JavaFX中，Scene中的内容会以由图形节点(Node)构成的分层场景图(Scene Graph)来展现。在本例中，root节点是一个StackPane对象，它是一个可以调整大小的layout节点。这就意味着在用户改变stage大小时，root节点可以随scene的大小变化而变化。</li>
<li>root节点包含一个带文本的按钮子节点，按钮上添加了一个事件处理器(Event Handler)，它在点击按钮时会向控制台输出信息。</li>
<li>当JavaFX应用程序是通过JavaFX Packager工具打包时，main()方法就不是必需的的了，因为JavaFX Package工具会将JavaFX Launcher嵌入到JAR文件中。但是保留main()方法还是很有用的，这样你可以运行不带有JavaFX Launcher的JAR文件，例如在使用某些没有将JavaFX工具完全集成进去的IDE时。另外嵌入了JavaFX代码的Swing应用程序仍需要main()方法。</li>
</ul>
<h3 id="JavaFX打包成exe"><a href="#JavaFX打包成exe" class="headerlink" title="JavaFX打包成exe"></a>JavaFX打包成exe</h3><p><strong>1. 生成jar的命令：javapackager -createjar</strong></p>
<blockquote>
<p>javapackager -createjar -appclass Test -srcdir classes -outdir archive -outfile Test.jar</p>
</blockquote>
<p>参数说明：</p>
<ul>
<li>-appclass Test<br>指定应用程序主类Test</li>
<li>-srcdir classes<br>指定源目录classes</li>
<li>-outdir archive<br>指定输出目录archive</li>
<li>-outfile Test.jar<br>指定输出文件名Test.jar</li>
</ul>
<p><strong>2. 生成exe的命令：javapackager -deploy</strong></p>
<blockquote>
<p>javapackager -deploy -appclass Test -native image -srcdir archive -outdir deploy -outfile Test -Bruntime=$JAVA_HOME/jre</p>
</blockquote>
<p>参数说明：</p>
<ul>
<li><p>-appclass Test</p>
<p>指定应用程序主类Test</p>
</li>
<li><p>-native image<br>指定输出的本地程序类型，image代表只生成一个启动器(exe)，也有别的选项可以生成安装程序等等(需要第三方工具)</p>
</li>
<li><p>-srcdir archive<br>指定源目录，这里指刚才打包存放jar文件的目录</p>
</li>
<li><p>-outdir deploy<br>指定输出目录deploy</p>
</li>
<li><p>-outfile Test<br>指定输出文件名Test</p>
</li>
<li><p>-Bruntime=$JAVA_HOME/jre<br>指定打包出来的独立程序使用的jre的位置，如果用的是cmd的话写成%JAVA_HOME%\jre<br>也可以指定别的jre，但是要小心保证javapackager所在的jdk和所使用的jre的位数相同(即都是32位或都是64位，最好版本也相同，最最好就直接用jdk自带的jre)</p>
</li>
</ul>
<p>注：本文部分内容转载自 <a href="http://www.javafxchina.net/blog/2015/06/doc01_helloworldstype/" target="_blank" rel="external">javafxchina</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Hello JavaFX.&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://gonethen.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="JavaFx" scheme="http://gonethen.github.io/tags/JavaFx/"/>
    
      <category term="桌面应用" scheme="http://gonethen.github.io/tags/%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>本地重新关联githubPage</title>
    <link href="http://gonethen.github.io/2018/03/31/%E6%9C%AC%E5%9C%B0%E9%87%8D%E6%96%B0%E5%85%B3%E8%81%94githubPage/"/>
    <id>http://gonethen.github.io/2018/03/31/本地重新关联githubPage/</id>
    <published>2018-03-31T06:23:54.632Z</published>
    <updated>2017-04-19T12:04:17.642Z</updated>
    
    <content type="html"><![CDATA[<p><code>git clone git@github.com:yourname/yourname.github.io.git</code></p>
<a id="more"></a>
<p>自己平时没事喜欢整理电脑，难免会误删个文件什么的，导致某个功能或应用不能正常使用。</p>
<p>这不昨天cclearner清理了一下，莫名的把原来hexo文件夹下的.git文件夹清理没了，后来干脆卸了git，卸了node.js，今天<strong>学习</strong>的时候突然想写博客，然后想起自己的博客环境快弄没了，索性全部重新装了一遍。</p>
<p>其实不用</p>
<p>在<a href="http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#more" target="_blank" rel="external">这篇博文的最后</a>有说：</p>
<blockquote>
<ol>
<li>使用<code>git clone git@github.com:yourname/yourname.github.io.git</code>拷贝仓库；</li>
<li>在本地新拷贝的<code>yourname.github.io</code>文件夹下通过Git bash依次执行下列指令：<code>npm install hexo</code>、<code>npm install</code>、<code>npm install hexo-deployer-git</code>（记得，不需要<code>hexo init</code>这条指令）。</li>
</ol>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;git clone git@github.com:yourname/yourname.github.io.git&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="github" scheme="http://gonethen.github.io/categories/github/"/>
    
    
      <category term="github" scheme="http://gonethen.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>IDEA2017破解</title>
    <link href="http://gonethen.github.io/2018/03/31/IDEA2017%E7%A0%B4%E8%A7%A3/"/>
    <id>http://gonethen.github.io/2018/03/31/IDEA2017破解/</id>
    <published>2018-03-31T06:23:54.616Z</published>
    <updated>2017-04-20T12:54:41.446Z</updated>
    
    <content type="html"><![CDATA[<p>有钱就去买正版。</p>
<a id="more"></a>
<h2 id="IDEA2017破解"><a href="#IDEA2017破解" class="headerlink" title="IDEA2017破解"></a>IDEA2017破解</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>​    下载<a href="http://www.jetbrains.com/" target="_blank" rel="external">IDEA</a></p>
<p>​    下载<a href="http://idea.lanyus.com/jar/JetbrainsCrack-2.6.2.jar" target="_blank" rel="external">破解补丁JetbrainsCrack-2.6.2.jar</a></p>
<h3 id="开始破解"><a href="#开始破解" class="headerlink" title="开始破解"></a>开始破解</h3><ol>
<li><p>安装IDEA，我安装到了<code>D:\Program Files\JetBrains\IntelliJ IDEA 2017.1.1</code> 。</p>
</li>
<li><p>将下载好的<code>JetbrainsCrack-2.6.2.jar</code>放到IDEA安装目录下的<code>bin</code>文件夹。</p>
<p><img src="http://i4.buimg.com/4851/02eded99c9b9655e.png" alt="将下载好的JetbrainsCrack-2.6.2.jar放到IDEA安装目录下的bin文件夹"></p>
</li>
<li><p><code>bin</code>目录下面有2个文件： <code>idea.exe.vmoptions</code>和<code>idea64.exe.vmoptions</code>，分别用记事本打开，在最后添加一行代码：</p>
<p><code>-javaagent:D:\Program Files\JetBrains\IntelliJ IDEA 2017.1.1\bin\JetbrainsCrack-2.6.2.jar</code></p>
<p>“D:\Program Files\JetBrains\IntelliJ IDEA 2017.1.1\bin\JetbrainsCrack-2.6.2.jar”是对应的JetbrainsCrack-2.6.2.jar的位置。</p>
<p><img src="http://i4.buimg.com/4851/8ee4867a96b630b4.png" alt="修改.vmoptions文件"></p>
</li>
<li><p>重启一下软件，在进入出现有active code选择界面的时候  写入下面的代码：(到2099年到期)</p>
<blockquote>
<p>ThisCrackLicenseId-{<br>“licenseId”:”ThisCrackLicenseId”,<br>“licenseeName”:”idea”,<br>“assigneeName”:””,<br>“assigneeEmail”:”idea@163.com”,<br>“licenseRestriction”:”For This Crack, Only Test! Please support genuine!!!”,<br>“checkConcurrentUse”:false,<br>“products”:[<br>{“code”:”II”,”paidUpTo”:”2099-12-31”},<br>{“code”:”DM”,”paidUpTo”:”2099-12-31”},<br>{“code”:”AC”,”paidUpTo”:”2099-12-31”},<br>{“code”:”RS0”,”paidUpTo”:”2099-12-31”},<br>{“code”:”WS”,”paidUpTo”:”2099-12-31”},<br>{“code”:”DPN”,”paidUpTo”:”2099-12-31”},<br>{“code”:”RC”,”paidUpTo”:”2099-12-31”},<br>{“code”:”PS”,”paidUpTo”:”2099-12-31”},<br>{“code”:”DC”,”paidUpTo”:”2099-12-31”},<br>{“code”:”RM”,”paidUpTo”:”2099-12-31”},<br>{“code”:”CL”,”paidUpTo”:”2099-12-31”},<br>{“code”:”PC”,”paidUpTo”:”2099-12-31”}<br>],<br>“hash”:”2911276/0”,<br>“gracePeriodDays”:7,<br>“autoProlongated”:false}</p>
</blockquote>
</li>
<li><p>破解成功，进入应用界面。</p>
<p><img src="http://i4.buimg.com/4851/911fa902ec688030.png" alt="进入应用界面"></p>
</li>
</ol>
<p>​</p>
<p>​</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有钱就去买正版。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://gonethen.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="IDEA" scheme="http://gonethen.github.io/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>学习JavaFX之路(2) - 简单的登录窗口</title>
    <link href="http://gonethen.github.io/2018/03/31/%E5%AD%A6%E4%B9%A0JavaFX%E4%B9%8B%E8%B7%AF(2)%20-%20%E7%AE%80%E5%8D%95%E7%9A%84%E7%99%BB%E5%BD%95%E7%AA%97%E5%8F%A3/"/>
    <id>http://gonethen.github.io/2018/03/31/学习JavaFX之路(2) - 简单的登录窗口/</id>
    <published>2018-03-31T06:23:54.585Z</published>
    <updated>2017-04-22T07:22:50.524Z</updated>
    
    <content type="html"><![CDATA[<p><strong>GridPane/Text/Label/TextField/PasswordField/Button/HBox</strong></p>
<a id="more"></a>
<h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(Stage primaryStage)</span> <span class="keyword">throws</span> Exception</span>&#123;</div><div class="line"><span class="comment">//        2.登录</span></div><div class="line">        primaryStage.setTitle(<span class="string">"登录"</span>);</div><div class="line">        GridPane gridPane = <span class="keyword">new</span> GridPane();</div><div class="line">        gridPane.setAlignment(Pos.CENTER);<span class="comment">//将grid的默认位置从靠左上角对齐改为居中</span></div><div class="line">        gridPane.setHgap(<span class="number">10</span>);<span class="comment">//列之间的间隔</span></div><div class="line">        gridPane.setVgap(<span class="number">10</span>);<span class="comment">//行之间的间隔</span></div><div class="line">        gridPane.setPadding(<span class="keyword">new</span> Insets(<span class="number">25</span>,<span class="number">25</span>,<span class="number">25</span>,<span class="number">25</span>));<span class="comment">//指定了上、右、下、左四边的间隔</span></div><div class="line"></div><div class="line">        Text sceneTitle = <span class="keyword">new</span> Text(<span class="string">"Welcome!"</span>);<span class="comment">//不可编辑的Text对象</span></div><div class="line">        sceneTitle.setFont(Font.font(<span class="string">"Tahoma"</span>, FontWeight.NORMAL,<span class="number">20</span>));<span class="comment">//设置字体</span></div><div class="line">        gridPane.add(sceneTitle,<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>);<span class="comment">//添加到GridPane</span></div><div class="line">        Label userName = <span class="keyword">new</span> Label(<span class="string">"用户名："</span>);<span class="comment">//Label</span></div><div class="line">        gridPane.add(userName,<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">        TextField userTextField = <span class="keyword">new</span> TextField();<span class="comment">//文本框</span></div><div class="line">        gridPane.add(userTextField,<span class="number">1</span>,<span class="number">1</span>);</div><div class="line">        Label password = <span class="keyword">new</span> Label(<span class="string">"密码："</span>);</div><div class="line">        gridPane.add(password,<span class="number">0</span>,<span class="number">2</span>);</div><div class="line">        PasswordField passwordField = <span class="keyword">new</span> PasswordField();<span class="comment">//密码框</span></div><div class="line">        gridPane.add(passwordField,<span class="number">1</span>,<span class="number">2</span>);</div><div class="line">        Button btn = <span class="keyword">new</span> Button(<span class="string">"登入"</span>);<span class="comment">//按钮</span></div><div class="line">        HBox hbBtn = <span class="keyword">new</span> HBox(<span class="number">10</span>);<span class="comment">//HBox布局面板，它的spacing被设置为10像素</span></div><div class="line">        hbBtn.setAlignment(Pos.BOTTOM_RIGHT);<span class="comment">//居右下，HBox面板为按钮设置了与grid面板中其它控件不同的对齐方式</span></div><div class="line">        hbBtn.getChildren().add(btn);<span class="comment">//将按钮控件作为子节点</span></div><div class="line">        gridPane.add(hbBtn, <span class="number">1</span>, <span class="number">4</span>);<span class="comment">//将HBox pane放到grid中的第1列，第4行</span></div><div class="line">        <span class="keyword">final</span> Text actionTarget = <span class="keyword">new</span> Text();<span class="comment">//增加用于显示信息的文本</span></div><div class="line">        gridPane.add(actionTarget, <span class="number">1</span>, <span class="number">6</span>);</div><div class="line">        btn.setOnAction(<span class="keyword">new</span> EventHandler&lt;ActionEvent&gt;() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(ActionEvent event)</span> </span>&#123;</div><div class="line">                actionTarget.setText(<span class="string">"你的密码是："</span>+passwordField.getText());</div><div class="line">                actionTarget.setFill(Color.FIREBRICK);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        Scene scene = <span class="keyword">new</span> Scene(gridPane,<span class="number">300</span>,<span class="number">350</span>);<span class="comment">//grid pane作为root节点</span></div><div class="line"></div><div class="line">        primaryStage.setScene(scene);</div><div class="line">        primaryStage.show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        launch(args);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="GRIDPANE-LAYOUT"><a href="#GRIDPANE-LAYOUT" class="headerlink" title="GRIDPANE LAYOUT"></a>GRIDPANE LAYOUT</h3><ul>
<li><p>GridPane：一个灵活的行列网格来对控件进行布局</p>
<ul>
<li><p>setAlignment：将grid的默认位置从靠左上角对齐改为Pos.CENTER(居中)显示</p>
</li>
<li><p>setVgap/setHgap：管理行/列之间的间隔</p>
</li>
<li><p>setPadding：管理grid面板边缘周围的间隔</p>
</li>
<li><p>insets：分别指定了上、右、下、左四边的间隔</p>
</li>
<li><p>add：添加子节点控件</p>
<p>Node child：子节点对象；int columnIndex：列索引；int rowIndex：行索引；int colspan：跨列数(可选)；int rowspan：跨行数(可选)</p>
</li>
</ul>
<p>以上参数我们可以通过下面这张图来理解：</p>
<p><img src="http://www.javafxchina.net/blog/wp-content/uploads/2015/06/4_2-login_gridlines_co.png" alt="gridPane布局"></p>
</li>
</ul>
<h3 id="添加子节点控件"><a href="#添加子节点控件" class="headerlink" title="添加子节点控件"></a>添加子节点控件</h3><ul>
<li>Text：不可编辑的文本</li>
<li>setFont：设置变量的family(字体)、fontWeight(字重粗细)和size(字号)</li>
<li>Label：Label标签，等同于html的<code>&lt;label&gt;&lt;/label&gt;</code></li>
<li>TextField：文本域输入框，等同于html的<code>&lt;input type=&quot;text&quot;/&gt;</code></li>
<li>PasswordField：密码输入框，等同于html的<code>&lt;input type=&quot;password&quot;/&gt;</code></li>
<li>Button：按钮<code>&lt;input type=&quot;button&quot;/&gt;</code></li>
<li>HBox：布局面板，为按钮设置了与grid面板中其它控件不同的对齐方式</li>
</ul>
<h3 id="添加按钮点击事件"><a href="#添加按钮点击事件" class="headerlink" title="添加按钮点击事件"></a>添加按钮点击事件</h3><ul>
<li>创建Text对象actionTarget，初始化没有任何文字</li>
<li>在button的setOnAction方法里对actionTarget进行文本赋值(setText)以及设置字体颜色(setFill)</li>
</ul>
<h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p><img src="http://i1.piimg.com/4851/7c95c5838b82d4f9.png" alt="登录最终效果"></p>
<p>注：本文部分内容转载自 <a href="http://www.javafxchina.net/blog/2015/06/doc01_form/" target="_blank" rel="external">javafxchina</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;GridPane/Text/Label/TextField/PasswordField/Button/HBox&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://gonethen.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="JavaFx" scheme="http://gonethen.github.io/tags/JavaFx/"/>
    
      <category term="桌面应用" scheme="http://gonethen.github.io/tags/%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>/dev/tty No such device or address</title>
    <link href="http://gonethen.github.io/2018/03/10/hexo%E7%9A%84%E4%B8%80%E4%B8%AA%E9%97%AE%E9%A2%98/"/>
    <id>http://gonethen.github.io/2018/03/10/hexo的一个问题/</id>
    <published>2018-03-10T13:29:26.776Z</published>
    <updated>2018-03-10T14:09:21.109Z</updated>
    
    <content type="html"><![CDATA[<p>很久没有写博客了吧？</p>
<a id="more"></a>
<ul>
<li><p>症状</p>
<p>like this: </p>
<p><img src="https://pic3.zhimg.com/80/0583869f38758783337aea67812d6f11_hd.jpg" alt="like this"></p>
</li>
<li><p>解决方案</p>
<p>打开根目录下的_config.yml，找到deploy节点</p>
<p>原来的配置是：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="attr">deploy:</span></div><div class="line"></div><div class="line"><span class="attr">   type:</span> git</div><div class="line"></div><div class="line"><span class="attr">   repo:</span> https://github.com/&#123;yourname&#125;/&#123;yourname&#125;.github.io.git</div><div class="line"></div><div class="line"><span class="attr">   branch:</span> master</div></pre></td></tr></table></figure>
<p>改成这样</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="attr">deploy:</span> </div><div class="line"></div><div class="line"><span class="attr">   type:</span> git</div><div class="line"></div><div class="line"><span class="attr">   repo:</span> https://&#123;yourname&#125;:&#123;yourpassword&#125;@github.com/&#123;yourname&#125;/&#123;yourname&#125;.github.io.git</div><div class="line"></div><div class="line"><span class="attr">   branch:</span> master</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很久没有写博客了吧？&lt;/p&gt;
    
    </summary>
    
      <category term="日志" scheme="http://gonethen.github.io/categories/%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="日志" scheme="http://gonethen.github.io/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>java定时任务三种方式</title>
    <link href="http://gonethen.github.io/2017/07/23/java%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    <id>http://gonethen.github.io/2017/07/23/java定时任务/</id>
    <published>2017-07-23T01:23:56.124Z</published>
    <updated>2017-07-23T02:23:38.788Z</updated>
    
    <content type="html"><![CDATA[<p>Thread/TimerTask/ScheduledExecutorService</p>
<a id="more"></a>
<h2 id="java定时任务三种方式"><a href="#java定时任务三种方式" class="headerlink" title="java定时任务三种方式"></a>java定时任务三种方式</h2><h3 id="Thread"><a href="#Thread" class="headerlink" title="Thread"></a>Thread</h3><p>创建一个thread，然后让它在while循环里一直运行着，通过sleep方法来达到定时任务的效果。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Task1</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="comment">// run in a second</span></div><div class="line">        <span class="keyword">final</span> <span class="keyword">long</span> timeInterval = <span class="number">1000</span>;</div><div class="line">        Runnable runnable = <span class="keyword">new</span> Runnable() &#123;</div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">                    <span class="comment">// ------- code for task to run</span></div><div class="line">                    System.out.println(<span class="string">"Hello !!"</span>);</div><div class="line">                    <span class="comment">// ------- ends here</span></div><div class="line">                    <span class="keyword">try</span> &#123;</div><div class="line">                        Thread.sleep(timeInterval);</div><div class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">                        e.printStackTrace();</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        Thread thread = <span class="keyword">new</span> Thread(runnable);</div><div class="line">        thread.start();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="TimerTask"><a href="#TimerTask" class="headerlink" title="TimerTask"></a>TimerTask</h3><p>当Timer的构造器被调用时，它创建了一个线程，这个线程可以调度多任务，它是线程安全的。</p>
<p>优势：</p>
<ul>
<li>启动和取消任务可以控制</li>
<li>第一次执行任务时可以指定delay时间</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Task2</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        TimerTask task = <span class="keyword">new</span> TimerTask() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="comment">// task to run goes here</span></div><div class="line">                System.out.println(<span class="string">"Hello !!!"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        Timer timer = <span class="keyword">new</span> Timer();</div><div class="line">        <span class="keyword">long</span> delay = <span class="number">0</span>;</div><div class="line">        <span class="keyword">long</span> intevalPeriod = <span class="number">1</span> * <span class="number">1000</span>;</div><div class="line">        <span class="comment">// schedules the task to be run in an interval</span></div><div class="line">        timer.scheduleAtFixedRate(task, delay, intevalPeriod);</div><div class="line">    &#125; <span class="comment">// end of main</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="ScheduledExecutorService"><a href="#ScheduledExecutorService" class="headerlink" title="ScheduledExecutorService"></a>ScheduledExecutorService</h3><p>通过ScheduledExecutorService.scheduleAtFixedRate()实现。</p>
<p>优势：</p>
<ul>
<li>通过线程池的方式执行</li>
<li>灵活的设定第一次执行任务delay时间</li>
<li>提供了良好的约定，以便设定执行的时间间隔</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Task3</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        Runnable runnable = <span class="keyword">new</span> Runnable() &#123;</div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="comment">// task to run goes here</span></div><div class="line">                System.out.println(<span class="string">"Hello !!"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        ScheduledExecutorService service = Executors.newSingleThreadScheduledExecutor();</div><div class="line">        <span class="comment">// 第二个参数为首次执行的延时时间，第三个参数为定时执行的间隔时间</span></div><div class="line">        service.scheduleAtFixedRate(runnable, <span class="number">10</span>, <span class="number">1</span>, TimeUnit.SECONDS);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Thread/TimerTask/ScheduledExecutorService&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://gonethen.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="java" scheme="http://gonethen.github.io/tags/java/"/>
    
      <category term="定时任务" scheme="http://gonethen.github.io/tags/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>个人简历</title>
    <link href="http://gonethen.github.io/2017/02/26/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/"/>
    <id>http://gonethen.github.io/2017/02/26/个人简历/</id>
    <published>2017-02-26T13:26:03.804Z</published>
    <updated>2018-03-17T07:26:42.908Z</updated>
    
    <content type="html"><![CDATA[<font face="等线">我要一步一步往上爬，在最高点乘着叶片往前飞。</font>



<a id="more"></a>
<h1 id="龚士杰"><a href="#龚士杰" class="headerlink" title="龚士杰"></a>龚士杰</h1><h3 id="基本信息"><a href="#基本信息" class="headerlink" title="- 基本信息"></a>- <font face="等线">基本信息</font></h3><ul>
<li>户籍：河北省邯郸市</li>
<li>出生年月：1993年8月</li>
<li>政治面貌：党员</li>
<li>毕业院校：石家庄铁路职业技术学院 - 软件技术</li>
<li>工作经验：3年</li>
<li>电子邮箱：gonethen@163.com</li>
<li>联系电话：18731152252</li>
</ul>
<h3 id="专业技能"><a href="#专业技能" class="headerlink" title="- 专业技能"></a>- <font face="等线">专业技能</font></h3><ol>
<li>熟练掌握 Java、Servlet、Jsp、JavaScript、JQuery、Ajax、JSTL等技术</li>
<li>熟练使用SpringMVC、SpringBoot、Mina、MyBatis等开源框架</li>
<li>熟练使用(抽象)工厂模式、单例模式、创造者模式、适配器模式、模板模式等常用设计模式</li>
<li>基本掌握 Oracle、MySQL、SQL Server等数据库的操作</li>
<li>基本掌握HTML5、CSS3、EasyUI、AmazeUI等前端技术</li>
<li>基本了解Tomcat、WebLogic 等应用服务器的使用</li>
<li>基本了解Ehcache、Redis、memcache等缓存框架</li>
<li>熟练使用 git、Maven、IDEA、SVN、(My)Eclipse、PL/SQL、Navicat、markdown、hexo等插件、工具或技术</li>
</ol>
<h3 id="工作经历"><a href="#工作经历" class="headerlink" title="- 工作经历"></a>- <font face="等线">工作经历</font></h3><ul>
<li><strong>2017/03 至今 北京爱学号科技有限公司</strong><ul>
<li>负责公司上饶、洛阳、台州等<code>麻将游戏</code>服务端代码开发</li>
<li>负责各地区<code>游戏后台代理管理系统</code>的开发与维护</li>
</ul>
</li>
</ul>
<ul>
<li><strong>2016/05 - 2017/01 北京通铭教育科技股份有限公司</strong><ul>
<li>负责<code>国寿经验萃取系统</code>的需求分析、数据库设计、系统开发、测试等过程，完成其中90%的工作量</li>
<li>负责<code>工商银行网络大学</code>二次开发与维护(国际化的实现、客户端数据区分筛选、bug修复、系统优化、报表开发)</li>
</ul>
</li>
<li><strong>2015/05 - 2016/05 中国软件与技术服务股份有限公司</strong><ul>
<li>负责<code>中国免疫规划信息管理系统</code>的二次开发、维护、数据处理</li>
</ul>
</li>
</ul>
<h3 id="项目经验"><a href="#项目经验" class="headerlink" title="- 项目经验"></a>- <font face="等线">项目经验</font></h3><ul>
<li><h4 id="上饶-洛阳-台州麻将及其后台代理管理系统"><a href="#上饶-洛阳-台州麻将及其后台代理管理系统" class="headerlink" title="上饶/洛阳/台州麻将及其后台代理管理系统"></a><font face="等线">上饶/洛阳/台州麻将及其后台代理管理系统</font></h4><ul>
<li>开发环境：Mina、MyBatis、Mysql、Tomcat、AmazeUI、SpringMVC</li>
<li>主要功能：<ol>
<li>游戏服务端创建房间、加入房间、出摸吃碰杠胡牌等接口和打牌逻辑算法的开发</li>
<li>后台代理权限管理、玩家管理、订单查询统计、业务数据查询统计</li>
<li>代理/玩家微信支付宝支付、支付宝提现功能，订单补单</li>
</ol>
</li>
</ul>
</li>
<li><h4 id="国寿经验萃取工具系统"><a href="#国寿经验萃取工具系统" class="headerlink" title="国寿经验萃取工具系统"></a><font face="等线">国寿经验萃取工具系统</font></h4><ul>
<li>开发环境：bootstrap、SpringMVC、MyBatis、Oracle、Tomcat</li>
<li>主要功能：<ul>
<li>前台<ol>
<li>萃取渠道、萃取方向选择；萃取用户信息的增改查操作；萃取问题、答案的新增修改回显；访谈记录的新增和修改、生成PPT</li>
<li>登录用户以及登录次数的记录；导航功能的实现；PC端和手机端兼容显示的实现</li>
</ol>
</li>
<li>后台<ol>
<li>萃取数据的删改查；PPT的上传与下载；萃取数据的年均、月均、人均统计分析</li>
<li>后端管理系统管理员授权新增管理员；根据权限管辖范围得到机构树，管理员可查询管辖范围内用户的数据</li>
<li>萃取问题类型和萃取问题的增删改查</li>
</ol>
</li>
</ul>
</li>
</ul>
</li>
<li><h4 id="中国免疫规划信息管理系统"><a href="#中国免疫规划信息管理系统" class="headerlink" title="中国免疫规划信息管理系统"></a><font face="等线">中国免疫规划信息管理系统</font></h4><ul>
<li>开发环境：JSP、JS、Servlet、Hibernate、Webwork、Oracle、Weblogic</li>
<li>主要功能：<ul>
<li>疫苗注射器的计划、出入库管理</li>
<li>常规接种报表导入、上报、审核，个案查询，统计分析</li>
<li>异常反应上报审核查询，统计分析</li>
<li>冷链设备信息管理，统计分析</li>
<li>综合管理，功能、用户、权限管理，配置管理</li>
</ul>
</li>
</ul>
</li>
<li><h4 id="进销存系统"><a href="#进销存系统" class="headerlink" title="进销存系统"></a><font face="等线">进销存系统</font></h4><ul>
<li>开发环境：JQuery、EasyUI、SpringMVC、MyBatis、SQL Server</li>
<li>主要功能：商品进货申请审核，采购合同订单审核，出入库信息、库存信息管理，销售管理</li>
</ul>
</li>
<li><h4 id="个人网站"><a href="#个人网站" class="headerlink" title="个人网站"></a><font face="等线">个人网站</font></h4><ul>
<li>开发环境：JQuery、AmazeUI、SpringMVC、MyBatis、Ehcache、Mysql</li>
<li>主要功能：注册、登录、论坛发帖、回帖、websocket聊天室、坦克大战、个人信息维护、功能角色权限维护等</li>
</ul>
</li>
</ul>
<h3 id="在校经历"><a href="#在校经历" class="headerlink" title="- 在校经历"></a>- <font face="等线">在校经历</font></h3><ul>
<li><strong>在校担任班长&amp;系体育部部长职位</strong><ul>
<li>组织班级素质拓展活动；系级篮球、乒乓球比赛</li>
<li>2013年10月 荣获石家庄铁路职业技术学院“优秀团学干部”称号</li>
<li>2014年5月 荣获石家庄铁路职业技术学院“优秀共青团员”称号</li>
<li>2014年6月 考取英语CET4证书</li>
<li>2015年12月 成为中国共产党党员</li>
</ul>
</li>
<li><strong>校内实践</strong><ul>
<li>利息计算器、学生奖惩系统等</li>
</ul>
</li>
<li><strong>个人爱好</strong><ul>
<li>编程、篮球、足球、音乐、美剧</li>
</ul>
</li>
</ul>
<h3 id="自我评价"><a href="#自我评价" class="headerlink" title="- 自我评价"></a>- <font face="等线">自我评价</font></h3><p>​    仰望星空，还需脚踏实地。</p>
<p>​    在学校时，我竞选班长，学生会部长，积极参加活动比赛，专业课几乎全部满分，同时还给父亲公司制作利息计算器、为其他系编写学生奖惩系统等。毕业后，我依然不断学习，搭建个人博客、制作个人网站、学习微信公众号、小程序、网络爬虫等技术。工作中的我，有一点代码洁癖，喜欢整理事物。乐于接触新的技术，迎接挑战。我也很坚信只有团队合作才能培养同事之间的默契，分享知识，共同进步。</p>
<p>​    我希望把握每一个机会来让自己变得更强。</p>
<p>​    非常感谢您阅读我的简历，我愿意倾尽所有创造价值！</p>
]]></content>
    
    <summary type="html">
    
      &lt;font face=&quot;等线&quot;&gt;我要一步一步往上爬，在最高点乘着叶片往前飞。&lt;/font&gt;
    
    </summary>
    
      <category term="个人简历" scheme="http://gonethen.github.io/categories/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/"/>
    
    
      <category term="个人简历" scheme="http://gonethen.github.io/tags/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>linux命令</title>
    <link href="http://gonethen.github.io/2017/02/11/linux%E5%91%BD%E4%BB%A4/"/>
    <id>http://gonethen.github.io/2017/02/11/linux命令/</id>
    <published>2017-02-11T08:34:46.474Z</published>
    <updated>2017-02-14T09:22:40.503Z</updated>
    
    <content type="html"><![CDATA[<p>linux常用命令。</p>
<a id="more"></a>
<h2 id="uname"><a href="#uname" class="headerlink" title="uname"></a>uname</h2><p>-a或–all ：显示系统全部信息；</p>
<p>-m或–machine ：显示电脑类型；</p>
<p>-n或-nodename ：显示在网络上的主机名称；</p>
<p>-r或–release ：显示操作系统的发行编号；</p>
<p> -s或–sysname ：显示操作系统名称；</p>
<p>-v ：显示操作系统的版本；</p>
<p>-p或–processor ：输出处理器类型或”unknown”；</p>
<p>-i或–hardware-platform ：输出硬件平台或”unknown”；</p>
<p>-o或–operating-system ：输出操作系统名称；</p>
<p>–help ：显示帮助；</p>
<p>–version ：显示版本信息。</p>
<h2 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h2><p>-c ：建立一个压缩文件的参数指令(create 的意思)；</p>
<p>-x ：解开一个压缩文件的参数指令；</p>
<p>-t ：查看 tarfile 里面的文件；</p>
<p>-r：向压缩归档文件末尾追加文件；</p>
<p>-u：更新原压缩包中的文件；</p>
<p><strong>特别注意，在参数的下达中， c/x/t/r/u 仅能存在一个！不可同时存在！因为不可能同时压缩与解压缩。 </strong></p>
<p>-z ：用 gzip 压缩；</p>
<p>-j ：用 bzip2 压缩；</p>
<p>-v ：显示所有过程；</p>
<p>-f ：使用档名；</p>
<p><strong>f 必须是最后一个参数！例如使用『 tar -zcvfP tfile sfile』就是错误的写法，要写成『 tar -zcvPf tfile sfile』才对 </strong></p>
<p>-p ：使用原文件的原来属性（属性不会依据使用者而变）；</p>
<p>-P ：可以使用绝对路径来压缩；</p>
<p>-N ：比后面接的日期(yyyy/mm/dd)还要新的才会被打包进新建的文件中；</p>
<p>–exclude FILE ：在压缩的过程中，不要将 FILE 打包；</p>
<h2 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h2><p>-Z ：设置安全上下文，当使用SELinux时有效；</p>
<p>-m&lt;目标属性&gt;或–mode&lt;目标属性&gt; ：建立目录的同时设置目录的权限；</p>
<p>-p或–parents ：若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录；</p>
<p>–version ：显示版本信息；</p>
<h2 id="打开终端快捷键"><a href="#打开终端快捷键" class="headerlink" title="打开终端快捷键"></a>打开终端快捷键</h2><p><code>Ctrl</code> + <code>Alt</code> + <code>T</code> </p>
<p>☆ 发现一个不错的网站 <a href="http://man.linuxde.net/" target="_blank" rel="external">Linux命令大全</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;linux常用命令。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://gonethen.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="http://gonethen.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="linux" scheme="http://gonethen.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>未激活状态时触发改变标签页title</title>
    <link href="http://gonethen.github.io/2017/01/09/%E6%9C%AA%E6%BF%80%E6%B4%BB%E7%8A%B6%E6%80%81%E6%97%B6%E8%A7%A6%E5%8F%91%E6%94%B9%E5%8F%98%E6%A0%87%E7%AD%BE%E9%A1%B5title/"/>
    <id>http://gonethen.github.io/2017/01/09/未激活状态时触发改变标签页title/</id>
    <published>2017-01-09T09:03:25.599Z</published>
    <updated>2017-01-09T09:21:17.759Z</updated>
    
    <content type="html"><![CDATA[<p>document.addEventListener(‘visibilitychange’,function(){});</p>
<a id="more"></a>
<p>其实很简单。</p>
<p>其实很自然。</p>
<p>添加<code>visibilitychange</code>事件的监听：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'visibilitychange'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">if</span>(<span class="built_in">document</span>.visibilityState==<span class="string">'hidden'</span>) &#123;</div><div class="line">		normal_title=<span class="built_in">document</span>.title;</div><div class="line">		<span class="built_in">document</span>.title=<span class="string">'(●\'◡\'●)'</span>;</div><div class="line">	&#125;<span class="keyword">else</span>&#123;</div><div class="line">		<span class="built_in">document</span>.title=normal_title;</div><div class="line">	&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;document.addEventListener(‘visibilitychange’,function(){});&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://gonethen.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="http://gonethen.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="html" scheme="http://gonethen.github.io/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>关于Oracle里的(+)</title>
    <link href="http://gonethen.github.io/2016/12/29/%E5%85%B3%E4%BA%8EOracle%E9%87%8C%E7%9A%84(+)/"/>
    <id>http://gonethen.github.io/2016/12/29/关于Oracle里的(+)/</id>
    <published>2016-12-29T01:57:45.205Z</published>
    <updated>2016-12-29T04:17:58.782Z</updated>
    
    <content type="html"><![CDATA[<p>+表示补充，即哪个表有加号，这个表就是匹配表。</p>
<a id="more"></a>
<p>加号写在右表，左表就是全部显示，故是左连接。</p>
<p>注意： 用（+） 就要用关键字where</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;+表示补充，即哪个表有加号，这个表就是匹配表。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://gonethen.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="http://gonethen.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Oracle" scheme="http://gonethen.github.io/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>分裂 - 周杰伦</title>
    <link href="http://gonethen.github.io/2016/12/27/%E5%88%86%E8%A3%82-%E5%91%A8%E6%9D%B0%E4%BC%A6/"/>
    <id>http://gonethen.github.io/2016/12/27/分裂-周杰伦/</id>
    <published>2016-12-27T13:09:31.432Z</published>
    <updated>2016-12-27T14:43:49.862Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>基于两种立场我会罩着你。</p>
</blockquote>
<a id="more"></a>
<blockquote>
<p>分裂 - 周杰伦</p>
<p>词：周杰伦<br>曲：周杰伦</p>
<p>坐着我的摩托车<br>载你缓缓的离开<br>考不上的好学校<br>可以不微笑就走<br>把手慢慢交给我<br>放下心中的困惑<br>雨点从两旁划过<br>割开两种精神的我<br>经过老伯的家<br>篮框变得好高<br>爬过的那棵树<br>又何时变得渺小<br>这样也好<br>开始没人注意到我<br>等雨变强之前<br>我们将会分化软弱</p>
<p>趁时间没发觉<br>让我带着你离开<br>没有了证明<br>没有了空虚<br>基于两种立场我会罩着你<br>趁时间没发觉<br>让我带着你离开<br>这不是顽固<br>这不是逃避<br>没人绑着你走才快乐</p>
<p>坐着我的摩托车<br>载你缓缓的离开<br>考不上的好学校<br>可以不微笑就走<br>把手慢慢交给我<br>放下心中的困惑<br>雨点从两旁划过<br>割开两种精神的我<br>经过老伯的家<br>篮框变得好高<br>爬过的那棵树<br>又何时变得渺小<br>这样也好<br>开始没人注意到你我<br>等雨变强之前<br>我们将会分化软弱</p>
<p>趁时间没发觉<br>让我带着你离开<br>没有了证明<br>没有了空虚<br>基于两种立场我会罩着你<br>趁时间没发觉<br>让我带着你离开<br>这不是顽固<br>这不是逃避<br>没人绑着你走才快乐</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;基于两种立场我会罩着你。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="音乐" scheme="http://gonethen.github.io/categories/%E9%9F%B3%E4%B9%90/"/>
    
    
      <category term="周杰伦" scheme="http://gonethen.github.io/tags/%E5%91%A8%E6%9D%B0%E4%BC%A6/"/>
    
      <category term="音乐" scheme="http://gonethen.github.io/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://gonethen.github.io/2016/12/14/hello-world/"/>
    <id>http://gonethen.github.io/2016/12/14/hello-world/</id>
    <published>2016-12-14T10:01:32.504Z</published>
    <updated>2016-12-27T03:48:17.399Z</updated>
    
    <content type="html"><![CDATA[<p>无意中发现了<strong>Hexo</strong>。</p>
<p>然后经过三四天的折腾，终于创建出了这个个人博客小站。</p>
<a id="more"></a>
<h2 id="HELLO-WORLD"><a href="#HELLO-WORLD" class="headerlink" title="HELLO WORLD"></a>HELLO WORLD</h2><p><img src="http://ww2.sinaimg.cn/bmiddle/88070423gw1ep30aw8an7g204d04gkgd.gif" alt="img"></p>
<div style="text-align:center;"><a href="http://ww2.sinaimg.cn/bmiddle/88070423gw1ep30aw8an7g204d04gkgd.gif" target="_blank" rel="external">女神在玩你来比划我来猜，PS: 机器猫有耳朵吗？</a></div>

<blockquote class="blockquote-center"><p>当你不知道说什么的时候，可以写下这段话，然后在最后署一个名人的人名，就像这样。</p>
<p>​                                        —— 罗素· 罗兰</p>
</blockquote>
<p>顺便学习了一下markdown语法。</p>
<ul>
<li><p>markdown 语法</p>
<p>​    标题：<code>## title##</code></p>
<p>​    列表：<code>-</code> 或 <code>*</code> 或 <code>1.</code></p>
<p>​    引用：<code>&gt;</code></p>
<p>​    分割线：<code>---</code> 或 <code>***</code></p>
<p>​    加粗：<code>**text**</code></p>
<p>​    斜体：<code>*text*</code> 或 <code>_text_</code></p>
<p>​    图片：<code>![imgTitle](imgUrl){ImgCap}{/ImgCap}</code></p>
<p>​    链接：<code>[urlText](url)</code></p>
<p>​    代码：两个``</p>
<p>​    more：<code>&lt;!--more--&gt;</code></p>
<p>​    上角标：<code>&lt;sup&gt;GONETHEN&lt;/sup&gt;</code></p>
<p>​    下角标：<code>&lt;sub&gt;GONETHEN&lt;/sub&gt;</code></p>
<p>​</p>
<p>​</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无意中发现了&lt;strong&gt;Hexo&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;然后经过三四天的折腾，终于创建出了这个个人博客小站。&lt;/p&gt;
    
    </summary>
    
      <category term="日志" scheme="http://gonethen.github.io/categories/%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="日志" scheme="http://gonethen.github.io/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
</feed>
